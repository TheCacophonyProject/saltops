#!/bin/bash

set -e

# Set the repository URL and branch name
repo_url="https://github.com/TheCacophonyProject/classifier-pipeline.git"
branch_name="pi-classifier"
remote=origin

# Check if the branch is not already cloned in the home folder
if [[ ! -d "/home/pi/classifier-pipeline" ]]; then
    echo "classifier-pipeline not installed, installing"

    # TODO Check if all of these are needed. 
    apt-get install -y python3-opencv libglib2.0-dev libgirepository1.0-dev libcairo2 libcairo2-dev python3-dbus git python3-venv gcc pkg-config python3-dev gir1.2-gtk-3.0 libdbus-glib-1-dev libdbus-1-dev ffmpeg

    # Create a virtual environment used for classifier.
    python3.9 -m venv /home/pi/classifier

    # Clone the repository into the home folder, checking out the specified branch
    git config --global pull.rebase false
    git clone --branch "$branch_name" "$repo_url" "/home/pi/classifier-pipeline"

    # Install requirements for pi, this will be using the virtual environment
    /home/pi/classifier/bin/pip install -r /home/pi/classifier-pipeline/pirequirements.txt
    
    # Create config file so classifier doesn't fail.
    if [[ ! -f "/home/pi/classifier-pipeline/classifier.yaml" ]]; then
        touch /home/pi/classifier-pipeline/classifier.yaml
    fi

    cd "/home/pi/classifier-pipeline"
    git config user.email "tc2@email.com"
    git config user.name "TC2"

else
    echo "classifier-pipeline already installed, pulling updates from git"
    cd "/home/pi/classifier-pipeline"

    # Get hash before update
    if [[ -f "pirequirements.txt" ]]; then
        pireq_hash_before=$(sha256sum pirequirements.txt | awk '{ print $1 }')
    else
        pireq_hash_before=""
    fi

    # Get rid of current changes using stash so they can be retrieved if needed.
    git stash --include-untracked

    git fetch $remote
    git reset --hard $remote/"$branch_name"

    # Get hash after update
    if [[ -f "pirequirements.txt" ]]; then
        pireq_hash_after=$(sha256sum pirequirements.txt | awk '{ print $1 }')
    else
        pireq_hash_after=""
    fi

    # Check if pirequirements.txt has changed
    if [[ "$pireq_hash_before" != "$pireq_hash_after" ]]; then
        echo "pirequirements.txt file changed, running pip install"
        /home/pi/classifier/bin/pip install -r /home/pi/classifier-pipeline/pirequirements.txt
    fi
fi
